volumes:
  postgres-data:

services:

  backend:
    build: ./api
    user: "1000:1000"
    command: /start.sh
    environment:
      - CELERY_BROKER=amqp://dri:adminadmin@rabbit:5672
    volumes:
      - ./api:/app
      # Diretório onde o backend pode manipular arquivos.
      - ./archive:/archive
      # Diretório de logs do backend.
      - ./log/backend:/log
      # Arquivo de configuração local
      - ./local_vars.py:/app/dri/settings/local_vars.py:ro
      # Diretório com dados iniciais a serem importados. necessário so na instalação.
      #- ./database_subset:/app/common/fixtures
    depends_on:
      - rabbit
      - database

  rabbit:
    image: rabbitmq:3-management
    hostname: rabbit_dri
    environment:
      - RABBITMQ_DEFAULT_USER=dri
      - RABBITMQ_DEFAULT_PASS=adminadmin

  # Frontend apps ExtJS with Sencha CMD app Watch
  # OBS: o container sky deve estar ligado para que os demais apps funcionem.
  # ele é responsavel por servir os diretórios de package e outras dependencias.
  sky:
    image: linea/sencha_cmd:6.5.3.6
    volumes:
      - ./frontend/:/code
    working_dir: /code/sky
    command: app watch

  target:
    image: linea/sencha_cmd:6.5.3.6
    volumes:
      - ./frontend/:/code
    working_dir: /code/target
    command: app watch
    depends_on:
      - sky

  explorer:
    image: linea/sencha_cmd:6.5.3.6
    volumes:
      - ./frontend/:/code
    working_dir: /code/explorer
    command: app watch
    depends_on:
      - sky

  eyeballing:
    image: node:10-alpine
    working_dir: /app
    volumes:
      - ./frontend/eyeballing:/app
    stdin_open: true
    command: yarn start
    ports:
      - 3000:3000

  landingpage:
    image: node:10-alpine
    working_dir: /app
    volumes:
      - ./frontend/landing_page:/app
    stdin_open: true
    command: yarn start
    ports:
      - 3001:3000

  database:
    image: ./compose/local/postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      # Deixa a porta do banco de dados acessivel para ferramentas externas como o dbeaver por exemplo.
      - 5432:5432
    volumes:
      # Init Database Script
      - ./compose/local/postgres/sql:/docker-entrypoint-initdb.d:ro      
      # Persistent Volume
      - postgres-data:/var/lib/postgresql/data

  nginx:
    build: ./frontend
    ports:
      - 80:8080
    volumes:
      # Arquivo de Configuração do Nginx
      - ./frontend/nginx-proxy-develop.conf:/etc/nginx/conf.d/default.conf:ro
      # Diretório de logs do servidor web. 
      - ./log/nginx:/var/log/nginx
      # Diretório onde o backend manipula arquivos, e que deve ficar acessivel ao servidor web.
      - ./archive:/var/www/data
    depends_on:
      - backend
      - sky
      - landingpage
      - eyeballing
      # - iipserver