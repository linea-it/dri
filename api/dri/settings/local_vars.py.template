import os

# Identification of the environment
ENVIRONMENT_NAME = "Development"

# the hostname and port number of the current Server with the protocol: Exemplo: https://scienceserver-dev.linea.org.br
BASE_HOST = "http://localhost"
# DOMAIN Exemplo: scienceserver-dev.linea.org.br
DOMAIN = "localhost" 

# A list of strings representing the host/domain names that this Django site can serve.
ALLOWED_HOSTS = ['*']

# Database
# Esta variavel deve ser preechida no local_vars.py deve conter obrigatóriamente
# 2 bancos de dados denominados de default e catalog.
# - N bancos de dados podem ser cadastradados.
# - O mesmo banco pode ser cadastrado mais de uma vez com alias diferentes, as vezes é necessário para usar schemas diferentes do mesmo banco, exemplo dos bancos oracle do NCSA.
# - Pode ser cadastrados bancos de dados de tipos diferentes exemplo Oracle e Postgresql.
# - para o Oracle o nome da chave que representa o banco não pode ter mais de 30 caracteres e nem o database name,
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'postgres',
        'USER': 'postgres',
        'PASSWORD': 'postgres',
        'HOST': 'database',
        'PORT': 5432,
        'OPTIONS': {
            'options': '-c search_path=dri_admin,public'
        }
    },
    'catalog': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'postgres',
        'USER': 'postgres',
        'PASSWORD': 'postgres',
        'HOST': 'database',
        'PORT': 5432,
        'OPTIONS': {
            'options': '-c search_path=dri_catalog,public'
        },
    },
    'mydb': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'postgres',
        'USER': 'postgres',
        'PASSWORD': 'postgres',
        'HOST': 'database',
        'PORT': 5432,
    },    
    'prod_gavo': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'prod_gavo',
        'USER': 'untrustedprod',
        'PASSWORD': '<password>',
        'HOST': 'host.docker.internal',
        'PORT': 3307,
    },      
}

# Exemplo utilizando Sqlite3 para desenvolvimento
# DATABASES = {
#    'default': {
#        'ENGINE': 'django.db.backends.sqlite3',
#        'NAME': os.path.join(DATA_DIR, 'dri.db'),
#    },
#    'catalog': {
#        'ENGINE': 'django.db.backends.sqlite3',
#        'NAME': os.path.join(DATA_DIR, 'catalog.db'),
#    },
# }

# Email Notification configs
# Dados de configuração do servidor de email que será usado para envio das notificações.
EMAIL_HOST = 'mailpit'
EMAIL_PORT = '1025'
EMAIL_HOST_USER = ''
EMAIL_HOST_PASSWORD = ''
EMAIL_USE_TLS = False
# Email utilizado para enviar as notificacoes do science server
EMAIL_NOTIFICATION = 'scienceserver@linea.org.br'
# Lista de email que receberão uma copia de todas as notificacoes
EMAIL_NOTIFICATION_COPY_TO = list(['dri-portal-notify@linea.org.br'])
# Email para o helpdesk LIneA
EMAIL_HELPDESK = 'helpdesk@linea.org.br'
# Email de contato do LIneA
EMAIL_HELPDESK_CONTACT = 'helpdesk@linea.org.br'
# Email que recebera as notificacoes e relatorios gerados pelo science server
EMAIL_ADMIN = 'dri@linea.org.br'

# Enables or disables sending daily email access statistics.
SEND_DAILY_STATISTICS_EMAIL = False

# # Configs das Aplicações:
# # TARGET VIEWER:
# # Habilita ou desabilita a interface de registro de produtos pela opcao Database,
# # esta Settings e usada apenas pelo frontend.
# PRODUCT_REGISTER_DB_INTERFACE = True
# # Habilita ou Desabilita a opcao de escolher o Folder na hora de registrar um produto.
# PRODUCT_REGISTER_FOLDERS = True
# # Habilita ou Desabilita a opção de registrar um produto como publico, pela interface.
# PRODUCT_REGISTER_ENABLE_PUBLIC = False
# Target Viewer Rating, Reject Schema Feature
# Lista de databases que o Target viewer pode acessar, deve ser o mesmo onde as tabelas rating e reject foram criada.
# As vezes é necessário ter o mesmo banco de dados com 2 configurações, como acontece com o catalog e dessci no NCSA.
# nesse caso o usuario só conhece o dessci
# este campo deveria ser preenchido com o valor dessci.
TARGET_VIEWER_DATABASES = []

# Others app config:
# Tempo limite em horas para que um produto fique disponivel, apos este tempo
# o produto sera removido pelo garbage colector e sua tabela sera dropada. Use None para desabilitar.
PRODUCT_EXPIRATION_TIME = None