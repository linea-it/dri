import os

# Just the 3 vars that the specific environment will use:
# BASE_PROJECT, LOG_DIR, DATABASES

# Substituir #BASEPROJECT# pelo diretorio de intalacao do projeto.
BASE_PROJECT = "#BASEPROJECT#"

LOG_DIR = os.path.join(BASE_PROJECT, 'log')

# Diretorio onde ficam os arquivos estaticos gerados pela aplicacao, arquivos como imagens, csvs, zips que necessitam
# ter uma url acessivel para download.
DATA_DIR = os.path.join(BASE_PROJECT, 'data')

# Path onde ficaram os arquivos que serao gerados para download
DOWNLOAD_DIR = os.path.join(DATA_DIR, 'download')

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_PROJECT, 'db/dri.db'),
    },
    'catalog': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_PROJECT, 'db/catalog.db'),
    }
}

# Email notification configs
# Email utilizado para enviar as notificacoes do science server
EMAIL_NOTIFICATION = 'noreply@linea.gov.br'
EMAIL_HELPDESK = 'helpdesk@linea.gov.br'
EMAIL_HOST = 'smtp.linea.gov.br'
EMAIL_PORT = '<porta do smtp>'
EMAIL_HOST_USER = '<usuario que vai ser usado no smtp>'
EMAIL_HOST_PASSWORD = '<senha do smtp>'
EMAIL_USE_TLS = True

# DES Cutout Service
DES_CUTOUT_SERVICE = {
    'HOST': 'http://descut.cosmology.illinois.edu',
    'USER': '<User required for cutout>',
    'PASSWORD': '<password required for cutout>',
    # Path onde ficaram os arquivos de cutout, esse parametro sera usado em conjunto com DATA_DIR para criar o path
    # absoluto para os arquivos.
    'CUTOUT_DIR': 'targets/cutouts',
    # Url base que sera usada para exibir as imagens geradas esse parametro deve ser mapeado no dri.conf no apache
    'CUTOUT_SOURCE': '/data',
    # Tempo de delay para a task check_jobs em minutos
    'CUTOUT_TASK_CHECK_JOBS_DELAY': 1
}


# Target Viewer Rating, Reject Schema
SCHEMA_RATING_REJECT = None

# Logging is disabled due errors in testing and production environment, this must be investigated.
# for developers, it safe to disable the follows lines
# LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': False,
#     'formatters': {
#         'verbose': {
#             'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s'
#         },
#         'simple': {
#             'format': '%(asctime)s [%(levelname)s] %(message)s'
#         },
#     },
#     'handlers': {
#         'file': {
#             'level': 'DEBUG',
#             'class': 'logging.FileHandler',
#             'filename': os.path.join(LOG_DIR, 'django.log'),
#         },
#         'descutoutservice': {
#             'level': 'DEBUG',
#             'class': 'logging.FileHandler',
#             'filename': os.path.join(LOG_DIR, 'cutout.log'),
#             'formatter': 'simple'
#         },
#         'downloads': {
#             'level': 'DEBUG',
#             'class': 'logging.FileHandler',
#             'filename': os.path.join(LOG_DIR, 'downloads.log'),
#             'formatter': 'simple'
#         },
#     },
#     'loggers': {
#         'django': {
#             'handlers': ['file'],
#             'level': 'DEBUG',
#             'propagate': True,
#         },
#         'descutoutservice': {
#             'handlers': ['descutoutservice'],
#             'level': 'DEBUG',
#             'propagate': True,
#         },
#         'downloads': {
#             'handlers': ['downloads'],
#             'level': 'DEBUG',
#             'propagate': True,
#         },
#     }
# }
